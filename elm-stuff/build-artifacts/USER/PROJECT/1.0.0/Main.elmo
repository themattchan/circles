Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm);
   var rgbs = A4($List.map3,
   $Color.rgb,
   _L.fromArray([64
                ,133
                ,102
                ,242
                ,238]),
   _L.fromArray([174
                ,158
                ,102
                ,161
                ,87]),
   _L.fromArray([122
                ,211
                ,102
                ,17
                ,30]));
   var replicate = F2(function (n,
   xs) {
      return A3($List.foldl,
      F2(function (_v0,a) {
         return function () {
            return A2($Basics._op["++"],
            xs,
            a);
         }();
      }),
      _L.fromArray([]),
      _L.range(1,n));
   });
   var translate = F2(function (_v2,
   _v3) {
      return function () {
         switch (_v3.ctor)
         {case "_Tuple2":
            return function () {
                 switch (_v2.ctor)
                 {case "_Tuple2":
                    return {ctor: "_Tuple2"
                           ,_0: _v2._0 + _v3._0
                           ,_1: _v2._1 + _v3._1};}
                 _U.badCase($moduleName,
                 "on line 28, column 28 to 42");
              }();}
         _U.badCase($moduleName,
         "on line 28, column 28 to 42");
      }();
   });
   var centerCoord = F2(function (r,
   theta) {
      return {ctor: "_Tuple2"
             ,_0: r * $Basics.cos(theta)
             ,_1: r * $Basics.sin(theta)};
   });
   var mirrorAngles = $List.map(function (x) {
      return x * -1;
   });
   var centerAngle = F2(function (n,
   i) {
      return $Basics.pi * (2 * i - 1) / (2 * n);
   });
   var circles = function () {
      var colours = A2(replicate,
      2,
      rgbs);
      var angles = A2($List.map,
      centerAngle(5),
      _L.range(1,5));
      var centres = $List.map(translate({ctor: "_Tuple2"
                                        ,_0: 0
                                        ,_1: 400}))($List.map(centerCoord(300.0))(mirrorAngles(angles)));
      var mkCircle = F2(function (colour,
      point) {
         return $Graphics$Collage.move(point)($Graphics$Collage.filled(colour)($Graphics$Collage.circle(50)));
      });
      return A3($List.map2,
      mkCircle,
      colours,
      centres);
   }();
   var main = A3($Graphics$Collage.collage,
   800,
   800,
   circles);
   _elm.Main.values = {_op: _op
                      ,centerAngle: centerAngle
                      ,mirrorAngles: mirrorAngles
                      ,centerCoord: centerCoord
                      ,translate: translate
                      ,replicate: replicate
                      ,circles: circles
                      ,main: main
                      ,rgbs: rgbs};
   return _elm.Main.values;
};